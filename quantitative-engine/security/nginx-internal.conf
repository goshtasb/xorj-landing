# XORJ Quantitative Engine - Internal Gateway Configuration
# SR-1: Zero Trust Network - Internal access only with security headers

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Hide server information
    server_tokens off;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Logging configuration
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log security_log;
    error_log /var/log/nginx/error.log warn;
    
    # Rate limiting for security
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=health:10m rate=1r/s;
    
    # SSL/TLS configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    
    # Upstream configuration
    upstream quantitative_engine {
        server quantitative-engine:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Main server block - HTTPS only
    server {
        listen 443 ssl http2;
        server_name quantitative-engine.internal;
        
        # SSL certificates (self-signed for internal use)
        ssl_certificate /etc/ssl/certs/internal.crt;
        ssl_certificate_key /etc/ssl/certs/internal.key;
        
        # SR-1: IP whitelist for internal access only
        # In production, this would be VPC CIDR ranges
        allow 172.20.0.0/24;  # Internal Docker network
        allow 10.0.0.0/8;     # VPC private ranges
        allow 192.168.0.0/16; # Private networks
        deny all;
        
        # Security limits
        client_max_body_size 1M;
        client_body_timeout 30s;
        client_header_timeout 30s;
        
        # Health check endpoint with minimal logging
        location /health {
            limit_req zone=health burst=5 nodelay;
            proxy_pass http://quantitative_engine/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;  # Reduce noise for health checks
        }
        
        # Internal API endpoints - Authentication required
        location /internal/ {
            limit_req zone=api burst=10 nodelay;
            
            # SR-1: Additional security for sensitive endpoints
            allow 172.20.0.0/24;  # Docker network only
            deny all;
            
            proxy_pass http://quantitative_engine;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Scoring endpoints - Additional security
        location /scoring/ {
            limit_req zone=api burst=5 nodelay;
            
            # SR-1: Restricted access for scoring operations
            allow 172.20.0.0/24;
            deny all;
            
            proxy_pass http://quantitative_engine;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeout for complex scoring operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Block all other requests
        location / {
            return 403;
        }
        
        # Security - block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~* \.(git|env|config)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }
}